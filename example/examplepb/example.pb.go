// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package examplepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_cce443376ed7e772, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type HopRequest struct {
	Hops                 int64    `protobuf:"varint,1,opt,name=hops,proto3" json:"hops,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HopRequest) Reset()         { *m = HopRequest{} }
func (m *HopRequest) String() string { return proto.CompactTextString(m) }
func (*HopRequest) ProtoMessage()    {}
func (*HopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_cce443376ed7e772, []int{1}
}
func (m *HopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HopRequest.Unmarshal(m, b)
}
func (m *HopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HopRequest.Marshal(b, m, deterministic)
}
func (dst *HopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HopRequest.Merge(dst, src)
}
func (m *HopRequest) XXX_Size() int {
	return xxx_messageInfo_HopRequest.Size(m)
}
func (m *HopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HopRequest proto.InternalMessageInfo

func (m *HopRequest) GetHops() int64 {
	if m != nil {
		return m.Hops
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "examplepb.Empty")
	proto.RegisterType((*HopRequest)(nil), "examplepb.HopRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HopperClient is the client API for Hopper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HopperClient interface {
	Hop(ctx context.Context, in *HopRequest, opts ...grpc.CallOption) (*Empty, error)
}

type hopperClient struct {
	cc *grpc.ClientConn
}

func NewHopperClient(cc *grpc.ClientConn) HopperClient {
	return &hopperClient{cc}
}

func (c *hopperClient) Hop(ctx context.Context, in *HopRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/examplepb.Hopper/Hop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HopperServer is the server API for Hopper service.
type HopperServer interface {
	Hop(context.Context, *HopRequest) (*Empty, error)
}

func RegisterHopperServer(s *grpc.Server, srv HopperServer) {
	s.RegisterService(&_Hopper_serviceDesc, srv)
}

func _Hopper_Hop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HopperServer).Hop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examplepb.Hopper/Hop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HopperServer).Hop(ctx, req.(*HopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hopper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "examplepb.Hopper",
	HandlerType: (*HopperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hop",
			Handler:    _Hopper_Hop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_example_cce443376ed7e772) }

var fileDescriptor_example_cce443376ed7e772 = []byte{
	// 122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x72, 0x0b, 0x92, 0x94,
	0xd8, 0xb9, 0x58, 0x5d, 0x73, 0x0b, 0x4a, 0x2a, 0x95, 0x14, 0xb8, 0xb8, 0x3c, 0xf2, 0x0b, 0x82,
	0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0x32, 0xf2, 0x0b, 0x8a, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x98, 0x83, 0xc0, 0x6c, 0x23, 0x2b, 0x2e, 0x36, 0x8f, 0xfc, 0x82, 0x82, 0xd4,
	0x22, 0x21, 0x03, 0x2e, 0x66, 0x8f, 0xfc, 0x02, 0x21, 0x51, 0x3d, 0xb8, 0x39, 0x7a, 0x08, 0xbd,
	0x52, 0x02, 0x48, 0xc2, 0x10, 0xb3, 0x19, 0x92, 0xd8, 0xc0, 0x16, 0x1b, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x5f, 0x0d, 0xfe, 0x9a, 0x89, 0x00, 0x00, 0x00,
}
